{"version":3,"sources":["utils/ApiCalendar.ts","components/Day.tsx","components/Timesheet.tsx","pages/ProgressPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Config","require","apiCalendar","sign","gapi","onLoadCallback","calendar","this","updateSigninStatus","bind","initClient","handleSignoutClick","handleAuthClick","createEvent","listUpcomingEvents","listEvents","listCalendars","createEventFromNow","listenSign","onLoad","setCalendar","updateEvent","deleteEvent","getEvent","getBasicUserProfile","handleClientLoad","e","console","log","isSignedIn","window","client","init","then","auth2","getAuthInstance","listen","get","catch","script","document","createElement","src","body","appendChild","onload","load","signIn","Promise","reject","Error","newCalendar","callback","signOut","maxResults","calendarId","events","list","timeMin","Date","toISOString","showDeleted","singleEvents","orderBy","queryOptions","calendarList","time","summary","description","timeZone","event","start","dateTime","end","getTime","sendUpdates","insert","resource","eventId","delete","currentUser","getBasicProfile","patch","Day","props","selectedTextStyle","selected","color","selectedStyle","bgcolor","hours","Math","floor","total","minutes","formattedHours","padStart","formattedMinutes","Box","sx","textAlign","Typography","variant","format","date","toUpperCase","borderRadius","paddingTop","marginTop","width","height","margin","Timesheet","today","weekDays","weekDayIdx","push","addDays","baseDate","Card","CardHeader","action","IconButton","onClick","onRefresh","Refresh","title","CardContent","flexGrow","Grid","container","spacing","map","day","dayIdx","item","xs","perDayTotals","isSameDay","marginY","LinearProgress","loading","value","doneThisWeek","plannedThisWeek","CardActions","Button","onPrevious","onCurrent","onNext","ProgressPage","state","ApiCalendar","undefined","calendars","setState","fetchCalendars","fetchData","a","result","items","error","now","startOfWeek","timeMax","endOfWeek","duration","differenceInMinutes","getDay","subDays","target","maxWidth","padding","component","gutterBottom","minWidth","marginBottom","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","handleCalendarChange","c","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","TextField","setPreviousWeek","setCurrentWeek","setNextWeek","Link","href","React","Component","App","Fragment","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da25d04c.chunk.js","sourcesContent":["/*\n  \nMIT License\n\nCopyright (c) 2018 Insomniak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nconst Config = require('./apiGoogleconfig.json');\n\nclass ApiCalendar {\n  sign: boolean = false;\n  gapi: any = null;\n  onLoadCallback: any = null;\n  calendar: string = 'primary';\n\n  constructor() {\n    try {\n      this.updateSigninStatus = this.updateSigninStatus.bind(this);\n      this.initClient = this.initClient.bind(this);\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\n      this.handleAuthClick = this.handleAuthClick.bind(this);\n      this.createEvent = this.createEvent.bind(this);\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n      this.listEvents = this.listEvents.bind(this);\n      this.listCalendars = this.listCalendars.bind(this);\n      this.createEventFromNow = this.createEventFromNow.bind(this);\n      this.listenSign = this.listenSign.bind(this);\n      this.onLoad = this.onLoad.bind(this);\n      this.setCalendar = this.setCalendar.bind(this);\n      this.updateEvent = this.updateEvent.bind(this);\n      this.deleteEvent = this.deleteEvent.bind(this);\n      this.getEvent = this.getEvent.bind(this);\n      this.getBasicUserProfile = this.getBasicUserProfile.bind(this);\n      this.handleClientLoad();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  /**\n   * Update connection status.\n   * @param {boolean} isSignedIn\n   */\n  private updateSigninStatus(isSignedIn: boolean): void {\n    this.sign = isSignedIn;\n  }\n\n  /**\n   * Auth to the google Api.\n   */\n  private initClient(): void {\n    // @ts-ignore\n    this.gapi = window['gapi'];\n    this.gapi.client\n      .init(Config)\n      .then(() => {\n        // Listen for sign-in state changes.\n        this.gapi.auth2\n          .getAuthInstance()\n          .isSignedIn.listen(this.updateSigninStatus);\n        // Handle the initial sign-in state.\n        this.updateSigninStatus(\n          this.gapi.auth2.getAuthInstance().isSignedIn.get()\n        );\n        if (this.onLoadCallback) {\n          this.onLoadCallback();\n        }\n      })\n      .catch((e: any) => {\n        console.log(e);\n      });\n  }\n\n  /**\n   * Init Google Api\n   * And create gapi in global\n   */\n  private handleClientLoad(): void {\n    // @ts-ignore\n    this.gapi = window['gapi'];\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    document.body.appendChild(script);\n    script.onload = (): void => {\n      // @ts-ignore\n      window['gapi'].load('client:auth2', this.initClient);\n    };\n  }\n\n  /**\n   * Sign in Google user account\n   */\n   public handleAuthClick(): Promise<any> {\n      if (this.gapi) {\n          return this.gapi.auth2.getAuthInstance().signIn();\n      } else {\n          console.log('Error: this.gapi not loaded')\n          return Promise.reject(new Error('Error: this.gapi not loaded'));\n      }\n  }\n\n  /**\n   * Set the default attribute calendar\n   * @param {string} newCalendar\n   */\n  public setCalendar(newCalendar: string): void {\n    this.calendar = newCalendar;\n  }\n\n  /**\n   * Execute the callback function when a user is disconnected or connected with the sign status.\n   * @param callback\n   */\n  public listenSign(callback: any): void {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n    } else {\n      console.log('Error: this.gapi not loaded');\n    }\n  }\n\n  /**\n   * Execute the callback function when gapi is loaded\n   * @param callback\n   */\n  public onLoad(callback: any): void {\n    if (this.gapi) {\n      callback();\n    } else {\n      this.onLoadCallback = callback;\n    }\n  }\n\n  /**\n   * Sign out user google account\n   */\n  public handleSignoutClick(): void {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().signOut();\n    } else {\n      console.log('Error: this.gapi not loaded');\n    }\n  }\n\n  /**\n   * List all events in the calendar\n   * @param {number} maxResults to see\n   * @param {string} calendarId to see by default use the calendar attribute\n   * @returns {any}\n   */\n  public listUpcomingEvents(\n    maxResults: number,\n    calendarId: string = this.calendar\n  ): any {\n    if (this.gapi) {\n      return this.gapi.client.calendar.events.list({\n        calendarId: calendarId,\n        timeMin: new Date().toISOString(),\n        showDeleted: false,\n        singleEvents: true,\n        maxResults: maxResults,\n        orderBy: 'startTime',\n      });\n    } else {\n      console.log('Error: this.gapi not loaded');\n      return false;\n    }\n  }\n\n  /**\n   * List all events in the calendar queried by custom query options\n   * See all available options here https://developers.google.com/calendar/v3/reference/events/list\n   * @param {object} queryOptions to see\n   * @param {string} calendarId to see by default use the calendar attribute\n   * @returns {any}\n   */\n  public listEvents(queryOptions: object,calendarId: string = this.calendar):\n    Promise<gapi.client.Response<gapi.client.calendar.Events>> {\n    if (this.gapi) {\n        return this.gapi.client.calendar.events.list({\n            calendarId,\n            ...queryOptions\n        });\n    } else {\n        throw Error(\"Error: this.gapi not loaded\");\n    }\n  }\n\n  /**\n   * List all calendars queried by custom query options\n   * See all available options here https://developers.google.com/calendar/v3/reference/calendarList/list\n   * @param {object} queryOptions to see\n   * @returns {any}\n   */\n  public listCalendars(queryOptions: object):\n    Promise<gapi.client.Response<gapi.client.calendar.CalendarList>> {\n    if (this.gapi) {\n        return this.gapi.client.calendar.calendarList.list({\n            ...queryOptions\n        });\n    } else {\n        throw Error(\"Error: this.gapi not loaded\");\n    }\n  }\n\n  /**\n   * Create an event from the current time for a certain period\n   * @param {number} time in minutes for the event\n   * @param {string} summary of the event\n   * @param {string} description of the event\n   * @param {string} calendarId\n   * @param {string} timeZone The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".)\n   * @returns {any}\n   */\n  public createEventFromNow(\n    { time, summary, description = '' }: any,\n    calendarId: string = this.calendar,\n    timeZone: string = 'Europe/Paris'\n  ): any {\n    const event = {\n      summary,\n      description,\n      start: {\n        dateTime: new Date().toISOString(),\n        timeZone: timeZone,\n      },\n      end: {\n        dateTime: new Date(new Date().getTime() + time * 60000),\n        timeZone: timeZone,\n      },\n    };\n\n    return this.createEvent(event, calendarId);\n  }\n\n  /**\n   * Create Calendar event\n   * @param {string} calendarId for the event.\n   * @param {object} event with start and end dateTime\n   * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n   * @returns {any}\n   */\n  public createEvent(event: object, calendarId: string = this.calendar, sendUpdates: string = 'none' ): any {\n    if (this.gapi) {\n      return this.gapi.client.calendar.events.insert({\n        calendarId: calendarId,\n        resource: event,\n        sendUpdates: sendUpdates,\n      });\n    } else {\n      console.log('Error: this.gapi not loaded');\n      return false;\n    }\n  }\n\n  /**\n   * Delete an event in the calendar.\n   * @param {string} eventId of the event to delete.\n   * @param {string} calendarId where the event is.\n   * @returns {any} Promise resolved when the event is deleted.\n   */\n  deleteEvent(eventId: string, calendarId: string = this.calendar): any {\n    if (this.gapi) {\n      return this.gapi.client.calendar.events.delete({\n        calendarId: calendarId,\n        eventId: eventId,\n      });\n    } else {\n      console.log('Error: gapi is not loaded use onLoad before please.');\n      return null;\n    }\n  }\n\n  /**\n   * @returns {any} Get the user's basic profile information. Documentation: https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile\n   */\n  getBasicUserProfile(): any {\n    if (this.gapi) {\n      return this.gapi.auth2\n        .getAuthInstance()\n        .currentUser.get()\n        .getBasicProfile();\n    } else {\n      console.log('Error: gapi is not loaded use onLoad before please.');\n      return null;\n    }\n  }\n\n  /**\n   * Update Calendar event\n   * @param {string} calendarId for the event.\n   * @param {string} eventId of the event.\n   * @param {object} event with details to update, e.g. summary\n   * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n   * @returns {any}\n   */\n  updateEvent(\n    event: object,\n    eventId: string,\n    calendarId: string = this.calendar,\n    sendUpdates: string = 'none',\n  ): any {\n    if (this.gapi) {\n      return this.gapi.client.calendar.events.patch({\n        calendarId: calendarId,\n        eventId: eventId,\n        resource: event,\n        sendUpdates: sendUpdates,\n      });\n    } else {\n      console.log('Error: gapi is not loaded use onLoad before please.');\n      return null;\n    }\n  }\n\n  /**\n   * Get Calendar event\n   * @param {string} calendarId for the event.\n   * @param {string} eventId specifies individual event\n   * @returns {any}\n   */\n\n  getEvent(eventId: string, calendarId: string = this.calendar): any {\n    if (this.gapi) {\n      return this.gapi.client.calendar.events.get({\n        calendarId: calendarId,\n        eventId: eventId,\n      });\n    } else {\n      console.log('Error: gapi is not loaded use onLoad before please.');\n      return null;\n    }\n  }\n}\n\nlet apiCalendar: ApiCalendar = new ApiCalendar();\nexport default apiCalendar;\n","import { Box, Typography } from \"@mui/material\";\nimport { format } from \"date-fns\";\n\ntype DayProps = {\n  date: Date;\n  selected?: boolean;\n  total: number;\n}\n\nexport function Day(props: DayProps) {\n  const selectedTextStyle = props.selected ? {\n    color: 'primary.dark',\n  } : {};\n  const selectedStyle = props.selected ? {\n    bgcolor: 'primary.dark',\n    color: 'white',\n  } : {};\n  const secondsInMinute = 60;\n  const hours = Math.floor(props.total / secondsInMinute);\n  const minutes = props.total % secondsInMinute;\n  const formatLength = 2;\n  const formatFill = \"0\";\n  const formattedHours = `${hours}`.padStart(formatLength, formatFill)\n  const formattedMinutes = `${minutes}`.padStart(formatLength, formatFill)\n  return (\n    <Box sx={{ ...selectedTextStyle, textAlign: \"center\" }}>\n      <Box>\n        <Typography variant=\"body2\">\n          {format(props.date, \"EEE\").toUpperCase()}\n        </Typography>\n      </Box>\n      <Box sx={{\n        ...selectedStyle, borderRadius: \"50%\",\n        paddingTop: \"2px\", marginTop: \"2px\"\n      }}\n        width={38} height={38} margin={\"auto\"}>\n        <Typography variant=\"h6\">\n          {format(props.date, \"d\")}\n        </Typography>\n      </Box>\n      <Box sx={{ marginTop: \"2px\" }}>\n        <Typography variant=\"subtitle2\">\n          {formattedHours}:{formattedMinutes}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}","import { Refresh } from \"@mui/icons-material\";\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Grid, IconButton, LinearProgress, Typography } from \"@mui/material\";\nimport { addDays, isSameDay } from \"date-fns\";\nimport { Day } from \"./Day\";\n\ntype TimesheetProps = {\n  loading: boolean;\n  baseDate: Date;\n  doneThisWeek: number;\n  plannedThisWeek: number;\n  perDayTotals: number[];\n  onRefresh: () => void;\n  onPrevious: () => void;\n  onCurrent: () => void;\n  onNext: () => void;\n};\n\nexport function Timesheet(props: TimesheetProps) {\n  const today = new Date();\n  const weekDays: Date[] = [];\n  const daysInWeek = 7;\n  for (let weekDayIdx = 0; weekDayIdx < daysInWeek; weekDayIdx++) {\n    weekDays.push(addDays(props.baseDate, weekDayIdx));\n  }\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\" onClick={() => props.onRefresh()}>\n            <Refresh />\n          </IconButton>\n        }\n        title=\"Timesheet\"\n      />\n      <CardContent sx={{ flexGrow: 1 }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Grid container spacing={2}>\n            {weekDays.map((day, dayIdx) =>\n              <Grid item xs>\n                <Day date={day} total={props.perDayTotals[dayIdx]}\n                  selected={isSameDay(day, today)} />\n              </Grid>)\n            }\n          </Grid>\n        </Box>\n        <Box marginTop={2}>\n          <Typography variant=\"body1\">\n            Progress\n          </Typography>\n          <Box marginY={1}>\n            <LinearProgress\n              variant={props.loading ? \"indeterminate\" : \"determinate\"}\n              value={props.doneThisWeek / props.plannedThisWeek * 100} />\n          </Box>\n          <Typography variant=\"body2\">\n            Planned this week: {props.loading ? \"-\" : props.plannedThisWeek / 60} hours\n            <br />\n            So far: {props.loading ? \"-\" : props.doneThisWeek / 60} hours\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button onClick={() => props.onPrevious()}>Previous</Button>\n        <Button onClick={() => props.onCurrent()}>Current</Button>\n        <Button onClick={() => props.onNext()}>Next</Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from \"react\";\nimport { Button, Link, TextField, Typography } from '@mui/material';\nimport ApiCalendar from '../utils/ApiCalendar';\nimport { startOfWeek, endOfWeek, differenceInMinutes, subDays, addDays } from 'date-fns'\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { DatePicker } from \"@mui/lab\";\nimport { Timesheet } from \"../components/Timesheet\";\n\ntype ProgressPageProps = {};\n\ntype ProgressPageState = {\n  sign: boolean;\n  events: gapi.client.calendar.Event[];\n  doneThisWeek: number;\n  plannedThisWeek: number;\n  perDayTotals: number[];\n  baseDate: Date;\n  loading: boolean;\n  calendar?: string;\n  calendars?: gapi.client.calendar.CalendarListEntry[];\n};\n\nexport class ProgressPage extends React.Component<ProgressPageProps, ProgressPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sign: ApiCalendar.sign,\n      events: [],\n      doneThisWeek: 0,\n      plannedThisWeek: 0,\n      perDayTotals: [0, 0, 0, 0, 0, 0],\n      baseDate: new Date(),\n      loading: true,\n      calendar: undefined,\n      calendars: [],\n    };\n    ApiCalendar.onLoad(() => {\n      ApiCalendar.listenSign((sign: boolean) => {\n        this.setState({ sign });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchCalendars();\n    this.fetchData();\n  }\n\n  async fetchCalendars() {\n    if (!ApiCalendar.sign) {\n      return;\n    }\n\n    try {\n      const { result } = await ApiCalendar.listCalendars({});\n      console.log(result.items);\n      this.setState({ calendars: result.items });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async fetchData() {\n    if (!ApiCalendar.sign) {\n      return;\n    }\n\n    this.setState({ loading: true });\n    const now = new Date();\n    try {\n      const { result } = await ApiCalendar.listEvents({\n        timeMin: startOfWeek(this.state.baseDate).toISOString(),\n        timeMax: endOfWeek(this.state.baseDate).toISOString(),\n        showDeleted: false,\n        maxResults: 50,\n        calendarId: this.state.calendar,\n        singleEvents: true,\n      });\n      let plannedThisWeek = 0;\n      let doneThisWeek = 0;\n      const perDayTotals = [0, 0, 0, 0, 0, 0, 0];\n      if (result.items) {\n        for (const event of result.items) {\n          if (event.start && event.end) {\n            const start = new Date(event.start?.dateTime!);\n            const end = new Date(event.end?.dateTime!);\n            const duration = differenceInMinutes(end, start);\n            perDayTotals[end.getDay()] += duration;\n            plannedThisWeek += duration;\n            if (end < now) {\n              doneThisWeek += duration;\n            }\n          }\n        }\n      }\n      this.setState({ plannedThisWeek, doneThisWeek, perDayTotals, loading: false });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async signIn() {\n    try {\n      await ApiCalendar.handleAuthClick();\n      await this.fetchCalendars();\n      this.setState({ sign: true });\n    } catch (e) {\n      console.log(e);\n      this.setState({ sign: false });\n    }\n  }\n\n  setPreviousWeek() {\n    this.setState({ baseDate: subDays(this.state.baseDate, 7) }, () => {\n      this.fetchData();\n    });\n  }\n\n  setCurrentWeek() {\n    this.setState({ baseDate: new Date() }, () => {\n      this.fetchData();\n    });\n  }\n\n  setNextWeek() {\n    this.setState({ baseDate: addDays(this.state.baseDate, 7) }, () => {\n      this.fetchData();\n    });\n  }\n\n  handleCalendarChange(event: SelectChangeEvent) {\n    this.setState({ calendar: event.target.value }, () => {\n      this.fetchData();\n    });\n  }\n\n  render() {\n    return (\n      <Box sx={{ width: '100%', maxWidth: 500, margin: 'auto', padding: 4 }}>\n        <Typography variant=\"h3\" component=\"div\" gutterBottom>\n          Week Progress\n        </Typography>\n        {this.state.sign ?\n          <div>\n            <Box sx={{ minWidth: 120, marginBottom: 2 }}>\n              <FormControl fullWidth>\n                <InputLabel id=\"demo-simple-select-label\">Pick the calendar</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={this.state.calendar}\n                  label=\"Pick the calendar\"\n                  onChange={(event) => this.handleCalendarChange(event)}\n                >\n                  {this.state.calendars?.map((c: gapi.client.calendar.Calendar) =>\n                    <MenuItem value={c.id}>{c.summary}</MenuItem>\n                  )}\n                </Select>\n                <Box marginBottom={2}></Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    label=\"Pick any date\"\n                    value={this.state.baseDate}\n                    onChange={(date: any) => {\n                      this.setState({ baseDate: new Date(date) });\n                    }}\n                    renderInput={(params: any) => <TextField {...params} />}\n                  />\n                </LocalizationProvider>\n\n              </FormControl>\n            </Box>\n            {this.state.calendar &&\n              <Timesheet\n                loading={this.state.loading}\n                baseDate={startOfWeek(this.state.baseDate)}\n                doneThisWeek={this.state.doneThisWeek}\n                plannedThisWeek={this.state.plannedThisWeek}\n                perDayTotals={this.state.perDayTotals}\n                onRefresh={() => this.fetchData()}\n                onPrevious={() => this.setPreviousWeek()}\n                onCurrent={() => this.setCurrentWeek()}\n                onNext={() => this.setNextWeek()}\n              />\n            }\n          </div>\n          :\n          <Button variant=\"contained\" onClick={() => this.signIn()}>\n            Sign in with Google</Button>\n        }\n        <Typography variant=\"caption\" component=\"div\" paddingTop={4} gutterBottom>\n          Hosted (code + bundle) on <Link href=\"https://github.com/pierremtb/week-progress\">GitHub</Link> 💛.\n          <br />\n          Copyright © 2021 <Link href=\"https://pierrejacquier.com\">Pierre Jacquier</Link>.\n        </Typography>\n      </Box>\n    );\n  }\n}","import React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport './App.css';\nimport { ProgressPage } from './pages/ProgressPage';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ProgressPage />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}